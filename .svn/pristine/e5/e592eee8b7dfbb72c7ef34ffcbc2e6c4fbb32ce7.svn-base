package com.sist.booking.controller;

import java.io.IOException;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
import java.util.ResourceBundle;

import com.sist.booking.dao.BookingDAO;
import com.sist.booking.dao.BookingVO;
import com.sist.dto.workdiv.BE_Major;
import com.sist.facility.controller.MyBrowser;
import com.sist.mypage.controller.LoginController;

import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.MenuButton;
import javafx.scene.control.MenuItem;
import javafx.scene.control.TextField;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.input.MouseEvent;
import javafx.scene.paint.Color;
import javafx.scene.shape.Rectangle;
import javafx.scene.text.Text;
import javafx.scene.web.WebEngine;
import javafx.scene.web.WebView;
import javafx.stage.Popup;
import javafx.stage.Stage;

public class Booking02_listController implements Initializable {
	BookingDAO dao = new BookingDAO();

	Alert alert = new Alert(AlertType.WARNING);
	@FXML
	Button findBtn, bookBtn1, bookBtn2, MyPgBtn, loginbtn,weather;
	@FXML
	TextField tfArea, tfDate, tfName1, tfName2;
	@FXML
	Text txtDate1, txtDate2, txtAdd1, txtAdd2;
	@FXML
	Rectangle Rec1, Rec2;
	@FXML
	ImageView Logo, imgView1, imgView2;
	@FXML
	MenuItem hyper01, hyper02;
	@FXML
	MenuButton comboBox;

	public static String bookingFsName;// 예약하는 경기장이름
	public static String date;// 예약하는 경기장이름날짜
	public static String address;// 예약하는 경기장이름주소
	public static String code;// 예약하는 경기장코드

	List<BookingVO> bList = new ArrayList<BookingVO>();

	//날씨 버튼 클릭시 날씨 페이지로 이동
	public void MoveToWeather(ActionEvent event) {
		try {
			Parent root = FXMLLoader.load(getClass().getResource("/com/sist/booking/view/Weather.fxml"));
			Scene scene = new Scene(root);
			Stage primaryStage = (Stage) weather.getScene().getWindow();
			primaryStage.setScene(scene);
			primaryStage.show();

		} catch (Exception e) {
			e.printStackTrace();
		}
	}
		
	// 상단 로고 클릭시 메인페이지로 이동
	public void MoveToMainPg(MouseEvent event) {
		try {

			Parent root = FXMLLoader.load(getClass().getResource("/com/sist/mainpage/view/MainPage.fxml"));
			Scene scene = new Scene(root);
			Stage primaryStage = (Stage) Logo.getScene().getWindow();
			primaryStage.setScene(scene);
			primaryStage.show();

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	// 상단 '마이페이지' 버튼 클릭시 메인페이지로 이동
	public void MoveToMyPg(ActionEvent event) {
		try {
			if(LoginController.loginStatus==BE_Major.LOGIN) {//로그인상태
				Parent root = FXMLLoader.load(getClass().getResource("/com/sist/mypage/view/MyPage01_UserInfo.fxml"));
				Scene scene = new Scene(root);
				Stage primaryStage = (Stage) MyPgBtn.getScene().getWindow();
				primaryStage.setScene(scene);
				primaryStage.show();
				
			}else {//로그아웃상태
				Parent root = FXMLLoader.load(getClass().getResource("/com/sist/booking/view/Booking02_list.fxml"));
				Scene scene = new Scene(root);
				Stage primaryStage = (Stage) MyPgBtn.getScene().getWindow();
				primaryStage.setScene(scene);
				primaryStage.show();
			}

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	// 상단 '로그인/로그아웃' 버튼 클릭시 로그인페이지로 이동
	public void MoveToLgPg(ActionEvent event) {
		try {
			if (LoginController.loginStatus==BE_Major.LOGIN) {//로그인상태(로그아웃버튼)
				LoginController.loginStatus=0;
				Parent root = FXMLLoader.load(getClass().getResource("/com/sist/booking/view/Booking02_list.fxml"));
				Scene scene = new Scene(root);
				Stage primaryStage = (Stage) loginbtn.getScene().getWindow();
				primaryStage.setScene(scene);
				primaryStage.show();
			}else {//로그아웃 상태(로그인버튼)
				Parent root = FXMLLoader.load(getClass().getResource("/com/sist/mypage/view/LoginPage.fxml"));
				Scene scene = new Scene(root);
				Stage primaryStage = (Stage) loginbtn.getScene().getWindow();
				primaryStage.setScene(scene);
				primaryStage.show();
				}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	// 상단 '관련사이트'클릭시 해당 사이트 팝업창 띄우기
	public void Hyperlink01(ActionEvent event) {

		WebView web01 = new WebView();
		WebEngine engine = web01.getEngine();

		MyBrowser mybrowser = new MyBrowser();

		Popup pop = new Popup();
		Stage stage = (Stage) comboBox.getScene().getWindow();
		// pop.setWidth(1200);
		// pop.setHeight(800);
		pop.getContent().add(mybrowser);
		pop.setAutoHide(true);
		pop.show(stage);

	}

	public void Hyperlink02(ActionEvent event) {

		WebView web01 = new WebView();
		WebEngine engine = web01.getEngine();

		MyBrowser mybrowser = new MyBrowser();

		Popup pop = new Popup();
		Stage stage = (Stage) comboBox.getScene().getWindow();

		pop.getContent().add(mybrowser);
		pop.setAutoHide(true);
		pop.show(stage);

	}

	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		// 로그인상태일때 로그인버튼->로그아웃버튼
		if (LoginController.loginStatus == BE_Major.LOGIN) {// 로그인상태
			loginbtn.setText("로그아웃");
		}
		// '마이페이지' 버튼 클릭시 마이페이지로 이동
		MyPgBtn.setOnAction(event -> MoveToMyPg(event));
		// 로고 이미지 클릭시 메인페이지로 이동
		Logo.setOnMouseClicked(event -> MoveToMainPg(event));
		// '마이페이지' 버튼 클릭시 마이페이지로 이동
		MyPgBtn.setOnAction(event -> MoveToMyPg(event));

		findBtn.setOnAction(event -> findAction(event));
		bookBtn1.setOnAction(event1 -> bookAction1(event1));
		bookBtn2.setOnAction(event2 -> bookAction2(event2));
		alert.setTitle("MSG");
		alert.setHeaderText("Look, a Dialog");

	}

	public void bookAction1(ActionEvent event1) {
		// 예약버튼 1 isBookingPossible이 true일때 진행 -> 경기장데이터는 1번목록에서 static으로 가져옴.
		// isBookingPossible 이 false일경우 진행불가

		if (bList.get(0).isBookingPossible() == true) {

			bookingFsName = bList.get(0).getFacilityName();// 예약페이지 2의 경기장 이름 (목록에서 static으로 가져옴)
			date = bList.get(0).getBookingDate(); // 예약페이지 2의 경기장 예약날짜 (목록에서 static으로 가져옴)
			address = bList.get(0).getFacilityAddress(); // 예약페이지 2의 경기장 주소 (목록에서 static으로 가져옴)
			code = bList.get(0).getFacilityCode(); // 경기장 코드 예약페이지 3에서 업데이트하는 목록을 구분하는 PK로 사용 (목록에서 static으로 가져옴)

			System.out.println("코드:" + code);// 예약을 진행하는 데이터의 경기장 코드

			try {
				alert.setContentText("예약을 진행합니다.");
				alert.showAndWait();

				Parent second = FXMLLoader
						.load(getClass().getResource("/com/sist/booking/view/Booking03_UserInformation.fxml"));
				Scene scene = new Scene(second);
				Stage primaryStage = (Stage) bookBtn2.getScene().getWindow();
				primaryStage.setScene(scene);
			} catch (IOException e) {
				e.printStackTrace();
			}
		} else {// isBookingPossible 이 false일경우 진행불가
			alert.setContentText("예약이 불가합니다.");
			alert.showAndWait();
		}

	}

	public void bookAction2(ActionEvent event2) {
		// 예약버튼 1 isBookingPossible이 true일때 진행 -> 경기장데이터는 2번목록에서 static으로 가져옴.
		// isBookingPossible 이 false일경우 진행불가

		if (bList.get(1).isBookingPossible() == true) {

			bookingFsName = bList.get(1).getFacilityName(); // 위와 동일
			date = bList.get(1).getBookingDate();
			address = bList.get(1).getFacilityAddress();
			code = bList.get(1).getFacilityCode();

			System.out.println("코드:" + code);

			try {
				alert.setContentText("예약을 진행합니다.");
				alert.showAndWait();

				Parent second = FXMLLoader
						.load(getClass().getResource("/com/sist/booking/view/Booking03_UserInformation.fxml"));
				Scene scene = new Scene(second);
				Stage primaryStage = (Stage) bookBtn2.getScene().getWindow();
				primaryStage.setScene(scene);
			} catch (IOException e) {
				e.printStackTrace();
			}
		} else {
			alert.setContentText("예약이 불가합니다.");
			alert.showAndWait();
		}

	}

	// 검색버튼
	public void findAction(ActionEvent event) {

		alert.setContentText("지역: " + tfArea.getText() + "\n날짜 :" + tfDate.getText() + "\n예약을 검색합니다.");
		alert.showAndWait();

		BookingVO bVO = new BookingVO();
		bVO = dao.getInputCode2(tfArea.getText(), tfDate.getText());
		bList = (List<BookingVO>) dao.do_retrieve2(bVO);

		// System.out.println("읽어온데이터★★★★★★★★" + bList.get(0).getFacilityName());

		for (int i = 0; i < bList.size(); i++) {
			System.out.println("읽어온데이터★★★★★★★★");
			System.out.println(bList.get(i));
		}

		TextField[] arryTf = { tfName1, tfName2 };// 경기장 이름
		Rectangle[] arryRect = { Rec1, Rec2 };// 빨간,파란 사각형
		ImageView[] arryImg = { imgView1, imgView2 };// 경기장 이미지
		Text[] arryTxtDate = { txtDate1, txtDate2 };// 경기장예약 날짜
		Text[] arryTxtAddress = { txtAdd1, txtAdd2 };// 경기장 주소

		for (int i = 0; i < bList.size(); i++) {

			arryTf[i].setText(bList.get(i).getFacilityName()); // 경기장 이름
			arryImg[i].setImage(new Image(bList.get(i).getImagePath())); // 경기장 이미지 패스설정
			arryTxtDate[i].setText(bList.get(i).getBookingDate()); // 경기장예약 날짜
			arryTxtAddress[i].setText(bList.get(i).getFacilityAddress()); // 경기장 주소

			if (bList.get(i).isBookingPossible() == true) {// isBookingPossible이 true일경우 i번째 사각형을 BLUE로 변경
				arryRect[i].setFill(Color.DARKBLUE);

			}
			if (bList.get(i).isBookingPossible() == false) {// isBookingPossible이 false일경우 i번째 사각형을 RED로 변경
				arryRect[i].setFill(Color.DARKRED);
			}

		}

	}

}
